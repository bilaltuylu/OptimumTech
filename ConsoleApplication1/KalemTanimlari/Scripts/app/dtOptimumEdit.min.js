function dtOptimumInLineEdit(a, b) { function c(m, n) { for (var o = m.fnGetData(n), p = $('>td', n), q = cols[k].sType, r = 0, t = p.length; r < t; r++) m.fnUpdate(o[cols[r].mDataProp], n, r, !1); $('#typ').autoNumeric('destroy'), $('#typ').typeahead('destroy'), $('#typ').select2('destroy'), $('#typ').iCheck('destroy'), $('.typ').clockpicker('destroy'), $('#' + $(m).attr('id') + ' .typ').datepicker('destroy'), $('#typ').select2('destroy'), $('#typ').bootstrapToggle('destroy'), g = null } function d(m, n) { var o = m.fnGetData(n), p = $('>td', n), q = cols[k].sType; switch (q) { case 'autonumeric': p[k].innerHTML = '<input type="text" id ="typ" class="form-control DTautonumeric" value="' + o[cols[k].mData] + '"/>', $('.DTautonumeric').autoNumeric('init'); break; case 'datepicker': var r = '<div class="input-group date typ">'; r += '<input type="text" id ="typ" size="16" class="form-control"/>', r += '<span class="input-group-addon"><i class="fa fa-calendar"></i></span>', r += '</div>', p[k].innerHTML = r, $('#' + $(m).attr('id') + ' .typ').datepicker({ keyboardNavigation: !0, forceParse: !1, clearBtn: !0, calendarWeeks: !0, autoclose: !0, todayBtn: !0, todayHighlight: !0, language: 'tr', immediateUpdates: !0 }), $('#' + $(m).attr('id') + ' .typ').datepicker('setDate', new Date(o[cols[k].mData])); break; case 'clockpicker': var t = ' <div class="input-group clockpicker typ" data-autoclose="true">'; t += '<input  id ="typ" type="text" data-mask="99:99" class="form-control" value="' + o[cols[k].mData] + '">', t += '<span class="input-group-addon">', t += '<span class="fa fa-clock-o"></span>', t += '</span>', t += '</div>', p[k].innerHTML = t, $('.typ').clockpicker({ donetext: 'Se\xE7' }); break; case 'typeahead': p[k].innerHTML = '<input type="text" id ="typ" class="form-control" value="' + o[cols[k].mData] + '"/>', $('#typ').typeahead(null, cols[k].func); break; case 'inputmask': p[k].innerHTML = '<input type="text" id ="typ" data-mask="' + cols[k].mask + '" class="form-control" value="' + o[cols[k].mData] + '"/>'; break; case 'select2': p[k].innerHTML = '<select id="typ"><></select>', $('#typ').select2(cols[k].func), $('#typ').html('<option value=\'' + o[cols[k].mData] + '\'>' + o[cols[k].displayValue] + ' </option>'); break; case 'dropdownlist': p[k].innerHTML = ''; var u = cols[k].itemArray, v = $('<select id="typ" />'); for (var w in u) $('<option />', { value: w, text: u[w].Text }).appendTo(v); v.appendTo(p[k]), cols[k].search ? $('#typ').select2({ width: '100%' }) : $('#typ').select2({ minimumResultsForSearch: Infinity, width: '100%' }), $('#typ').val(o[cols[k].mData]).trigger('change.select2'); break; case 'i-checks': p[k].innerHTML = '<input type="checkbox" id ="typ" class="i-checks"> </label>', $('#typ').prop('checked', o[cols[k].mData]), $('#typ').iCheck({ checkboxClass: 'icheckbox_square-green', radioClass: 'iradio_square-green' }); break; case 'bootstrapToggle': p[k].innerHTML = '<input id="typ" type="checkbox" data-toggle="toggle">', o[cols[k].mData] && $('#typ').attr('checked', !0), $('#typ').bootstrapToggle({ on: 'Evet', off: 'Hay\u0131r', onstyle: 'primary', offstyle: 'danger', size: 'small' }), $('#typ').prop('checked', o[cols[k].mData]).change(); break; default: p[k].innerHTML = '<input type="text" id ="typ" class="form-control" value="' + o[cols[k].mData] + '"/>'; } $('#typ').focus() } function f(m, n) { if (!l) { haveChnage = !1; var u, o = $('input', n), p = m.fnGetData(n), q = $('>td', n), r = cols[k].sType, t = p[cols[k].mData]; switch (r) { case 'autonumeric': u = $('#typ').autoNumeric('get'), m.fnUpdate(u, j, k, !1); break; case 'select2': u = $('#typ option:selected').val(); var v = $('#typ option:selected').text(); p[cols[k].displayValue] = v, m.fnUpdate(u, j, k, !1); break; case 'datepicker': u = $('#' + $(m).attr('id') + ' .typ').data('datepicker').getFormattedDate('yyyy-mm-dd') + 'T00:00:00', m.fnUpdate(u, j, k, !1); break; case 'clockpicker': u = $('#typ').val() + ':00', m.fnUpdate(u, j, k, !1); break; case 'clockpicker': u = $('#typ').val(), m.fnUpdate(u, j, k, !1); break; case 'maskedit': u = $('#typ').val(), m.fnUpdate(u, j, k, !1); break; case 'i-checks': u = !1, $('#typ').is(':checked') && (u = !0), m.fnUpdate(u, j, k, !1); break; case 'bootstrapToggle': u = !1, $('#typ').is(':checked') && (u = !0), m.fnUpdate(u, j, k, !1); break; default: u = $('#typ').val(), m.fnUpdate(u, j, k, !1); } m.fnGetData(j); null != b && '' != b && $.trim(t) != $.trim(u) && (alert('post'), l = !0, $.ajax({ type: 'POST', url: b, data: p, success: function (x) { l = !1, 'OK' != x && (m.fnUpdate(p, j), alert(x)) }, error: function (x, y, z) { l = !1, m.fnUpdate(p, j), alert(x.status + ' >>>> ' + z) } })) } } var g = null, j, k, l = !1; $(document).on('click', function (m) { 0 === $(m.target).closest('#' + $(a).attr('id')).length && g && c(a, g) }), $('#' + $(a).attr('id') + ' thead tr th').click(function () { col_num = parseInt($(this).index()) }), $('#' + $(a).attr('id') + ' tbody tr td').click(function () { null != g && (k != parseInt($(this).index()) || j != parseInt($(this).parent().index())) && (f(a, g), g = null), k = parseInt($(this).index()), j = parseInt($(this).parent().index()) }), $('#' + $(a).attr('id') + ' tbody tr').on('click', function (m) { if (!l) { m.preventDefault(); var n = $(this)[0], o = $('>td', n), p = o[k], q = cols[k].inEdit; return q ? void (0 > o[k].innerHTML.indexOf('<input') && 0 > o[k].innerHTML.indexOf('<select') && (null == g ? (g = n, d(a, n)) : (f(a, g), g = n, d(a, n)))) : void (null != g && c(a, g)) } }), $('#' + $(a).attr('id') + ' tbody tr').keydown(function (m) { 27 == m.keyCode && (m.preventDefault(), c(a, g)), 13 == m.keyCode && (m.preventDefault(), null == g ? alert('Select Row') : f(a, g), g = null) }) }